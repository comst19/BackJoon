package Silver;

import java.util.*;

public class S2_18352 {

	static int n,m,k,x;
	static boolean flag = false;
	static int[] dis;
	static ArrayList<ArrayList<Integer>> city = new ArrayList<>();
	static Queue<Integer> q = new LinkedList<>();
	
	
	public static void BFS(int start ,int L) {
		dis = new int[n+1];
		int cnt = 0;
		
		q.offer(start);
		
		while(!q.isEmpty()) {
			cnt++;
			if(cnt == L) flag = true;
			int cur = q.poll();
			
			for(int city : city.get(cur)) {
				if(dis[city] == 0) {
					dis[city] = dis[cnt] + 1;
					q.offer(city);
				}
			}
		}
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		m = sc.nextInt();
		k = sc.nextInt();
		x = sc.nextInt();
		
		for(int i = 0; i <= n; i++) city.add(new ArrayList<>());
		
		for(int i = 0; i < m; i++) {
			int to = sc.nextInt();
			int from = sc.nextInt();
			city.get(to).add(from);
		}
		
		BFS(x,k);
		for(int i = 1; i <= n; i++) {
			if (dis[i] == k) {
				System.out.println(i);
			} 
		}
		if(flag == false) System.out.println(-1);
	}

}
