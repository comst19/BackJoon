package Gold;

import java.io.*;
import java.util.*;

class Point{
	int y,x;
	public Point(int y, int x) {
		this.y = y;
		this.x = x;
	}
}

public class G4_14502 {

	static int n,m,vY,vX, max = Integer.MIN_VALUE;
	static Queue<Point> q = new LinkedList<>();
	static int[] dx = {-1,1,0,0};
	static int[] dy = {0,0,-1,1};
	static int[][] map;
	
	public static void Safe(int[][] vMap) {
		int cnt = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				if(vMap[i][j] == 0) cnt++;
			}
		}
		
		max = Math.max(max, cnt);
	}
	
	public static void BFS() {
		int[][] vMap = map.clone();
		
		while(!q.isEmpty()) {
			Point cur = q.poll();
			
			for(int i = 0; i < 4; i++) {
				int nx = cur.x + dx[i];
				int ny = cur.y + dy[i];
				if(ny >= 0 && ny < n && nx >= 0 && nx < m && vMap[ny][nx] == 0) {
					q.offer(new Point(ny,nx));
					vMap[ny][nx] = 2;
				}
			}
		}
		
		Safe(vMap);
	}
	
	public static void DFS(int cnt) {
		if(cnt == 3) {
			BFS();
			return;
		}else {
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < m; j++) {
					if(map[i][j] == 0) {
						map[i][j] = 1;
						DFS(cnt+1);
						map[i][j] = 0;
					}
				}
			}
		}
	}
	
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		map = new int[n][m];
		
		
		for(int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < m; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
				if(map[i][j] == 2) {
					q.offer(new Point(i,j));
					System.out.println(i + " " + j);
				}
			}
		}
		
		DFS(0);
		System.out.println(max);
	}

}
