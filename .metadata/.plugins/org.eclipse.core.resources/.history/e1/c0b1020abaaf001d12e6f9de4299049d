package Gold;

import java.util.*;

class time implements Comparable<time>{
	int s, e;
	public time(int s, int e) {
		this.s = s;
		this.e = e;
	}
	@Override
	public int compareTo(time o) {
		// TODO Auto-generated method stub
		return this.s - o.s;
	}
	
}

class seat implements Comparable<seat>{
	int e, idx;
	public seat(int e, int idx) {
		this.e = e;
		this.idx = idx;
	}
	@Override
	public int compareTo(seat o) {
		// TODO Auto-generated method stub
		if(this.e == o.e) return this.idx - o.idx; 
		return this.e - o.e;
	}
}

public class G3_12764 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] ch = new int[n];
		
		time[] times = new time[n];
		PriorityQueue<seat> seats = new PriorityQueue<>();
		
		for(int i = 0; i < n; i++) {
			int s = sc.nextInt();
			int e = sc.nextInt();
			times[i] = new time(s,e);
		}
		
		Arrays.sort(times);
		
		int idx = 0;
		for(time t : times) {
			if(seats.isEmpty()) {
				seats.offer(new seat(t.e, idx));
				ch[idx] = 1;
				idx++;
			}
			else {
				if(seats.peek().e > t.s) {
					seats.offer(new seat(t.e, idx));
					ch[idx] = 1;
					idx++;
				}else {
					ArrayList<seat> temp = new ArrayList<>();
					for(int i = 0 ; i < idx; i++) {
						seat s = seats.poll();
						if(s.e <= t.s) {
							s.e = 0;
							System.out.println(s.idx+" 되냐");
						} 
						temp.add(s);
					}
					for(seat tmp : temp) seats.offer(tmp);
					if(seats.peek().e > t.s) {
						seats.offer(new seat(t.e, idx));
						ch[idx] = 1;
						idx++;
					}else {
						seat s = seats.poll();
						s.e = t.e;
						ch[s.idx]++;
					}
				}
			}
			System.out.println();
		}
		//System.out.println(idx);
		//for(int i = 0; i < idx; i++) System.out.print(ch[i] + " ");
	}

}
